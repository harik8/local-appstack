name: CICD

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      app_name:
        type: string
        description: Name of the application
      build_args:
        type: list
        description: List of build args for Docker build
        default: [] 

jobs:
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Check Docker daemon
      run: docker info

    # Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push the Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: gha-runner
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.app_name }}:latest
        platforms: linux/amd64,linux/arm64
        build-args: ${{ inputs.build_args }}

    # Verify that the Docker image is built
    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}

  CD:
    runs-on: self-hosted
    needs: [CI]
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: 'latest'

    - name: Deploy
      run: |
        sed -i "s/^name: .*/name: ${{ inputs.app_name }}/" cicd-template/Chart.yaml
        sed -i "s/^appVersion: .*/appVersion: latest/" cicd-template/Chart.yaml

        helm upgrade --install --atomic \
          --create-namespace \
          --namespace ${{ inputs.app_name }} \
          --set image.tag=latest \
          -f ${{ inputs.app_name }}/.github/values.yaml -f ${{ inputs.app_name }}/.github/sandbox/values.yaml \
          ${{ inputs.app_name }} cicd-template