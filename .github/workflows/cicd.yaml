name: CI

on:
  push:
    branches:
    - main
    - D-*
    paths:
    - show-ip/**
    - .gitub/workflows/cicd.yaml
    - gh-runner/**
  pull_request:
    branches:
    - main
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

env:
  REPO_URL: '${{ vars.REPO_URL }}'
  RUNNER_TOKEN: '${{ secrets.RUNNER_TOKEN }}'

jobs:
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Check Docker daemon
      run: docker info

    # Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push the Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: gha-runner
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/gh-runner:latest
        platforms: linux/amd64,linux/arm64

    # Verify that the Docker image is built
    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}

  CD:
    runs-on: self-hosted
    needs: [CI]
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v4

    # - name: configure aws credentials
    #   uses: aws-actions/configure-aws-credentials@v4 
    #   with:
    #     role-to-assume: ${{ vars.IAM_ROLE_ARN }}
    #     aws-region: ${{ vars.AWS_REGION }}

    # - name: Assume STS Role
    #   run: |
    #     aws sts assume-role --role-arn ${{ vars.IAM_ROLE_ARN }} --role-session-name GitHubActions

    # - name: Set Kube Context
    #   run: |
    #     aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.EKS_CLUSTER_NAME }} --role-arn ${{ vars.EKS_DEPLOY_ROLE_ARN }}

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: 'latest'

    - name: Deploy
      run: |
        sed -i "s/^name: .*/name: show-ip/" cicd-template/Chart.yaml
        sed -i "s/^appVersion: .*/appVersion: latest/" cicd-template/Chart.yaml

        helm upgrade --install \
          --atomic \
          --create-namespace \
          --namespace gh-runner \
          --set image.tag=latest \
          -f show-ip/.github/values.yaml -f show-ip/.github/sandbox/values.yaml \
          show-ip cicd-template

